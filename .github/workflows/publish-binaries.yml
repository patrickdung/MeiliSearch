on:
  release:
    types: [published]

name: Publish binaries to release

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        include:
          - os: ubuntu-18.04
            artifact_name: meilisearch
            asset_name: meilisearch-linux-amd64
          - os: macos-latest
            artifact_name: meilisearch
            asset_name: meilisearch-macos-amd64
          - os: windows-latest
            artifact_name: meilisearch.exe
            asset_name: meilisearch-windows-amd64.exe

    steps:
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: stable
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --locked --verbose
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.PUBLISH_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}

  publish-armv8:
    name: Publish for ARMv8
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.1.1
        id: runcmd
        with:
          arch: aarch64 # aka ARMv8
          distro: ubuntu18.04
          env: |
            JEMALLOC_SYS_WITH_LG_PAGE: 16
          run: |
            apt update
            apt install -y curl gcc make
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable
            source $HOME/.cargo/env
            cargo build --release --locked --verbose
      - name: Upload the binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.PUBLISH_TOKEN }}
          file: target/release/meilisearch
          asset_name: meilisearch-linux-armv8
          tag: ${{ github.ref }}
